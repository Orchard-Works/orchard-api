name: Deploy to Ubuntu Server

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Verify image push
        run: |
          echo "Image tags:"
          echo "${{ steps.meta.outputs.tags }}"
          docker pull ${{ steps.meta.outputs.tags }}
          docker image ls

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SERVER_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Deploy to Ubuntu server
        env:
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USER }}
          GITHUB_TOKEN: ${{ secrets.GHCR_PAT }}
        run: |
          # Debug: Print the contents of docker-compose.yml
          cat docker-compose.yml

          scp docker-compose.yml $USER@$HOST:/opt/apps/orchard-backend/
          ssh $USER@$HOST << EOF
            cd /opt/apps/orchard-backend
            echo "$GITHUB_TOKEN" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Debug: List available images
            docker image ls

            # Debug: Try to pull the image manually
            docker pull ${{ steps.meta.outputs.tags }}

            docker-compose pull
            docker-compose up -d
            docker logout ghcr.io
          EOF
